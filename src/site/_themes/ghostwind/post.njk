---
layout: default.njk
---

{% set fontMeta = theme_ghostwind.fonts.post.meta %}
{% set fontTitle = theme_ghostwind.fonts.post.title %}
{% set fontTldr = theme_ghostwind.fonts.post.tldr %}
{% set fontAuthor = theme_ghostwind.fonts.post.author %}
{% set colorFooter = theme_ghostwind.colors.postFooter %}

<section>

  {# Title, Date, Tags #}
  <div class="text-center pt-20 pb-12">
    <p class="text-sm md:text-base text-{{ theme.colors.accent }}-600 dark:text-{{ theme.colors.main }}-100 font-bold {{ fontMeta }}">
      <time datetime="{{ date }}">{{ date | readableDate | upper }}</time>
      <span class="px-1 text-{{ theme.colors.main }}-900 dark:text-{{ theme.colors.main }}-100">/</span>
      <span class="uppercase">{{ content | readingTime | upper }} read</span>
      {% if tags %}
      <span class="px-1 text-{{ theme.colors.main }}-900 dark:text-{{ theme.colors.main }}-100">/</span>
        <span class="category">
          {% set separator = joiner(' +') %}
          {% for tag in tags %}
            {%- if tag != "post" -%}
              {% set tagUrl %}/tags/{{ tag | slug }}/{% endset %}
              {{ separator() }} <a href="{{ tagUrl | url }}" rel="tag" class="no-underline">{{ tag | upper }}</a>
            {%- endif -%}
          {% endfor %}
        </span>
      {% endif %}
    </p>
    <h1 class="font-bold break-normal text-3xl md:text-5xl mb-0 {{ fontTitle }}">{{ title }}</h1>
  </div>

  {# Hero Media #}
  {% if video_type %}
  <div class="resp-container video-embed md:rounded overflow-hidden" data-id="{{ video_id }}" data-type="{{ video_type }}" data-thumbnail="{{ image_card }}">
  </div>
  {% elif image_card %}
  <div class="w-full max-w-6xl mx-auto bg-white bg-cover md:rounded overflow-hidden" style="height: 75vh; background-image:url('{{ image_card }}'); background-position: center center; background-repeat: no-repeat; background-size: cover;"></div>
  {% endif %}

  {# Post Content #}
  <div class="container max-w-5xl mx-auto {% if image_card %}-mt-32{% endif %} mb-16 bg-{{ theme.colors.main }}-100 dark:bg-{{ theme.colors.main }}-900">

    {# Post Content #}
    <div class="content highlight-{{ theme.colors.accent }} w-full md:px-24 {% if image_card %}p-8 md:pt-24{% else %}px-8 pb-8{% endif %} text-xl leading-normal">

      <p class="text-2xl md:text-3xl mb-5 {{ fontTldr }}">
        {{ tldr }}
      </p>

      {# Markdown #}
      {{ content | safe }}

    </div>
  </div>

  {# CTA #}
  <div class="container text-{{ theme.colors.main }}-100 bg-{{ theme.colors.main }}-800 p-4 md:p-24 text-center rounded w-full mx-auto shadow-md hover:shadow-lg">
    <h2 class="font-bold break-normal text-2xl md:text-4xl">Subscribe to {{ site.name }}</h2>
    <h3 class="font-bold break-normal font-normal text-base md:text-xl">Get the latest posts delivered right to your feed reader.</h3>
    <div class="w-full text-center pt-4">
      <p><a href="feed.xml">Atom Feed</a> | <a href="rss.xml">RSS Feed</a></p>
    </div>
  </div>

  {# Author Box #}
  <div class="h-card container max-w-5xl mx-auto flex w-full items-center p-8 md:px-24 py-12 text-{{ theme.colors.main }}-800 dark:text-{{ theme.colors.main }}-100">
    <img class="u-photo w-10 h-10 rounded-full mr-4" src="{{ site.author_avatar }}" alt="Avatar of {{ site.author_name }}">
    <div class="flex-1 {{ fontAuthor }}">
      <p class="p-name text-base md:text-lg font-bold leading-none">{{ site.author_name }}</p>
      <p class="p-note text-sm md:text-base">{{ site.author_bio }}</p>
    </div>
    <div class="justify-end">
      <a href="/about" class="bg-transparent border border-{{ theme.colors.main }}-500 hover:border-{{ theme.colors.accent }}-500 text-sm text-{{ theme.colors.main }}-500 hover:bg-{{ theme.colors.accent }}-500 font-bold py-2 px-4 rounded-full">Read More</a>
    </div>
  </div>

  {% if collection === "blog" %}
    {% set currentPost = collections.blog | getCollectionItem(page) %}
    {% set previousPost = collections.blog | getPreviousCollectionItem(page) %}
    {% set nextPost = collections.blog | getNextCollectionItem(page) %}
    <div>
      <p>{% if previousPost %}Previous Post: <a href="{{ previousPost.url }}">{{ previousPost.data.title }}</a>{% endif %}</p>
      <p>{% if nextPost %}Next Post: <a href="{{ nextPost.url }}">{{ nextPost.data.title }}</a>{% endif %}</p>
    </div>
  {% elif collection === "highlights" %}
    {% set currentPost = collections.highlights | getCollectionItem(page) %}
    {% set previousPost = collections.highlights | getPreviousCollectionItem(page) %}
    {% set nextPost = collections.highlights | getNextCollectionItem(page) %}
    <div>
      <p>{% if previousPost %}Previous Post: <a href="{{ previousPost.url }}">{{ previousPost.data.title }}</a>{% endif %}</p>
      <p>{% if nextPost %}Next Post: <a href="{{ nextPost.url }}">{{ nextPost.data.title }}</a>{% endif %}</p>
    </div>
  {% endif %}

  <div class="flex flex-row w-full justify-between">
    <p class="w-1/2">{% if previousPost %}Newer<br><a href="{{ previousPost.url }}">{{ previousPost.data.title }}</a>{% endif %}</p>
    <p class="w-1/2">{% if nextPost %}Older<br><a href="{{ nextPost.url }}">{{ nextPost.data.title }}</a>{% endif %}</p>
  </div>

</section>

{# More Posts #}
<section class="bg-{{ theme.colors.accent }}-200 dark:bg-{{ theme.colors.main }}-800 px-6 md:px-0">
  <div class="w-full max-w-6xl mx-auto px-2 pt-24 pb-8">
    <div class="flex flex-wrap -mx-2">
      {% if collection === "blog" %}
        {% set postslist = collections.blog | limit(3) %}
        {% include "ghostwind/postslist.njk" %}
      {% elif collection === "highlights" %}
        {% set postslist = collections.highlights | limit(3) %}
        {% include "ghostwind/postslist.njk" %}
      {% else %}
        {% set postslist = collections.archive | limit(3) %}
        {% include "ghostwind/postslist.njk" %}
      {% endif %}
    </div>
  </div>
</section>

{# Scroll Progress Script #}
<script>
  /* Progress bar */
  //Source: https://alligator.io/js/progress-bar-javascript-css-variables/
  var h = document.documentElement,
      b = document.body,
      st = 'scrollTop',
      sh = 'scrollHeight',
      progress = document.querySelector('#progress'),
      scroll;
  var scrollpos = window.scrollY;
  var header = document.getElementById("scrollHeader");

  document.addEventListener('scroll', function() {

    /*Refresh scroll % width*/
    scroll = (h[st]||b[st]) / ((h[sh]||b[sh]) - h.clientHeight) * 100;
    progress.style.setProperty('--scroll', scroll + '%');

    /*Apply classes for slide in bar*/
    scrollpos = window.scrollY;

    if(scrollpos > 100){
      header.classList.remove("hidden");
    header.classList.remove("fadeOutUp");
    header.classList.add("slideInDown");
    }
    else {
    header.classList.remove("slideInDown");
      header.classList.add("fadeOutUp");
    header.classList.add("hidden");
    }

  });

</script>

{% if video_type == "clip" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("video-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//clips.twitch.tv/embed?clip=" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("autoplay", "1");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "clip-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}

{% if video_type == "vod" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("video-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//player.twitch.tv/?autoplay=false&video=v" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "vod-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}

{% if video_type == "collection" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("video-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//player.twitch.tv/?autoplay=false&collection=" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "collection-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}
