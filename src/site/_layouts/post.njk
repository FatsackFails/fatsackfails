---
layout: default
section: blog
---
<section class="h-entry flex-1 container ml-auto mr-auto lg:px-32">

  <div class="post-header mb-12 md:mb-20">

    <h1 class="page-title text-3xl md:text-center md:text-5xl lg:text-5xl">{{ title }}</h1>

    <div class="text-sm md:text-base text-gray-600 flex justify-center">
      <p class="md:text-center">
        {% if video_type == "clip" %}
          <span class="author">Clipped by {{ clipper }}</span>
          <span class="px-2">—</span>
        {% else %}
          <span class="author">By {{ site.author_name }}</span>
          <span class="px-2">—</span>
        {% endif %}
        <time datetime="{{ date }}">{{ date | dateDisplay }}</time>
        <span class="px-2">—</span>
        <span class="author">Reading Time: {{ content | readingTime }}</span>
        <span class="px-2">—</span>
        {% if tags %}
          <span class="category">Posted in
            {% set separator = joiner(' +') %}
            {% for tag in tags %}
              {%- if tag != "blog" -%}
                {% set tagUrl %}/tags/{{ tag }}/{% endset %}
                {{ separator() }} <a href="{{ tagUrl | url }}" rel="tag" class="underline">{{ tag }}</a>
              {%- endif -%}
            {% endfor %}
          </span>
        {% endif %}
      </p>
    </div>

    {# Hero Media #}
    {% if video_type %}
    <div class="resp-container twitch-embed mt-10 md:mt-8" data-id="{{ video_id }}"></div>
    {% elif featured_image %}
    <figure class="mt-10 md:mt-8">
      <img src="{{ featured_image }}" alt="{{ image_caption }}">
      {% if image_caption %}
        <figcaption class="text-center text-sm italic text-gray-600 mt-4">{{ image_caption }}</figcaption>
      {% endif %}
    </figure>
    {% endif %}

  </div>

  <div class="content post md:px-16">
    <p class="intro">{{ tldr }}</p>
    {{ content | safe }}
  </div>

</section>


{% if video_type == "clip" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("twitch-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//clips.twitch.tv/embed?clip=" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("autoplay", "1");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "clip-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}

{% if video_type == "vod" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("twitch-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//player.twitch.tv/?autoplay=false&video=v" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "vod-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}

{% if video_type == "collection" %}
  <script>
    (function () {
      let v = document.getElementsByClassName("twitch-embed");
      for (let n = 0; n < v.length; n++) {
        const p = document.createElement("div");
        p.innerHTML = previewThumb(v[n].dataset.id);
        p.onclick = previewIframe;
        v[n].appendChild(p);
      }
    })();
    function previewThumb(id) {
      return '<img class="preview-image" src="{{ featured_image }}"><div class="play-icon"></div>';
    }
    function previewIframe() {
      var iframe = document.createElement("iframe");
      iframe.setAttribute("src", "//player.twitch.tv/?autoplay=false&collection=" + this.parentNode.dataset.id);
      iframe.setAttribute("height", "480");
      iframe.setAttribute("width", "854");
      iframe.setAttribute("frameborder", "0");
      iframe.setAttribute("scrolling", "0");
      iframe.setAttribute("allowfullscreen", "1");
      iframe.setAttribute("muted", "0");
      iframe.setAttribute("preload", "metadata");
      iframe.setAttribute("class", "resp-iframe");
      iframe.setAttribute("id", "collection-iframe");
      this.parentNode.replaceChild(iframe, this);
    }
  </script>
{% endif %}
